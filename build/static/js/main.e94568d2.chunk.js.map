{"version":3,"sources":["Tmdb.js","components/MovieRow.js","components/FeaturedMovie.js","components/Header.js","App.js","index.js"],"names":["API_KEY","basicFetch","endpoint","a","fetch","req","json","getHomeList","slug","title","items","getMovieInfo","movieId","type","info","useState","scrollX","setScrollX","className","id","onClick","x","Math","round","window","innerWidth","style","fontSize","results","length","listW","marginLeft","width","map","item","key","src","poster_path","alt","original_title","firstDate","Date","first_air_date","genres","i","push","name","description","overview","substring","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","original_name","vote_average","getFullYear","number_of_seasons","href","join","black","App","movieList","setMovieList","featuredData","setFeaturedData","blackHeader","setBlackHeader","useEffect","Tmdb","list","originals","filter","randomChosen","floor","random","chosen","chosenInfo","loadAll","scrolllistener","scrollY","addEventListener","removeEventListener","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e94568d2.chunk.js","sourcesContent":["const API_KEY = 'c776f4e6dcba57fc2e2bafedb039ed08';\r\nconst API_BASE = 'https://api.themoviedb.org/3';\r\n\r\nconst basicFetch = async(endpoint) => {\r\n    const req = await fetch(`${API_BASE}${endpoint}`);\r\n    const json = await req.json();\r\n    return json;\r\n}\r\n\r\nexport default {\r\n    getHomeList: async () => {\r\n        return [\r\n            {\r\n                slug: 'originals',\r\n                title: 'Popular on Netflix',\r\n                items: await basicFetch(`/discover/tv?with_network=213&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'trending',\r\n                title: 'Trending Now',\r\n                items: await basicFetch(`/trending/all/week?api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'toprated',\r\n                title: 'Top Rated',\r\n                items: await basicFetch(`/movie/top_rated?api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'action',\r\n                title: 'Action',\r\n                items: await basicFetch(`/discover/movie?with_genres=28&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'comedy',\r\n                title: 'Comedy',\r\n                items: await basicFetch(`/discover/movie?with_genres=35&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'horror',\r\n                title: 'Horror',\r\n                items: await basicFetch(`/discover/movie?with_genres=27&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'romance',\r\n                title: 'Romance',\r\n                items: await basicFetch(`/discover/movie?with_genres=10749&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'documentary',\r\n                title: 'Documentary',\r\n                items: await basicFetch(`/discover/movie?with_genres=99&api_key=${API_KEY}`)\r\n            },\r\n        ];\r\n    },\r\n\r\n    getMovieInfo: async (movieId, type) => {\r\n        let info = {};\r\n\r\n        if(movieId) {\r\n            switch(type) {\r\n                case 'movie':\r\n                    info = await basicFetch(`/movie/${movieId}?api_key=${API_KEY}`);\r\n                break;\r\n                case 'tv':\r\n                    info = await basicFetch(`/tv/${movieId}?api_key=${API_KEY}`);\r\n                break;\r\n                default:\r\n                    info = null;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return info;\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport './MovieRow.css';\r\n\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\nexport default ({slug, title, items})=> {\r\n\r\n    const [scrollX, setScrollX] = useState(0);\r\n\r\n    const handleLeftArrow = () => {\r\n        let x = scrollX + Math.round(window.innerWidth / 2);\r\n        if(x > 0) {\r\n            x = 0;\r\n        }\r\n        setScrollX(x);\r\n    }\r\n\r\n    const handleRightArrow = () => {\r\n        let x = scrollX - Math.round(window.innerWidth / 2);\r\n        let listW = items.results.length * 200;\r\n        if((window.innerWidth - listW) > x) {\r\n            x = (window.innerWidth - listW) - 140;\r\n        }\r\n        setScrollX(x);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"movieRow\">\r\n            <h2> {title} </h2>\r\n\r\n            <div id={scrollX === 0 ? 'hideArrow' : ''} className=\"movieRow--left\" onClick={handleLeftArrow}> <NavigateBeforeIcon style={{fontSize: 50 }}></NavigateBeforeIcon></div>\r\n            <div id={scrollX === (window.innerWidth - (items.results.length) * 200) - 140 ? 'hideArrow' : ''} className=\"movieRow--right\" onClick={handleRightArrow}> <NavigateNextIcon style={{fontSize: 50 }}></NavigateNextIcon></div>\r\n\r\n            <div className=\"movieRow--listarea\">\r\n                <div className=\"movieRow--list\" style={{marginLeft: scrollX, width: items.results.length * 200}}>\r\n                     {items.results.length > 0 && items.results.map((item, key)=>(                 \r\n                        <div id={slug} key={key} className=\"movieRow--item\">\r\n                            <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title}></img>\r\n                        </div>\r\n                     ))}\r\n                </div>     \r\n            </div>\r\n        </div> //movieRow\r\n    );\r\n}","import React from 'react';\r\nimport './FeaturedMovie.css';\r\n\r\nexport default ({item}) => {\r\n\r\n    let firstDate = new Date(item.first_air_date);\r\n    let genres = [];\r\n\r\n    for(let i in item.genres) {\r\n        genres.push(item.genres[i].name);\r\n    }\r\n\r\n    let description = item.overview;\r\n    if(description.length > 200) {\r\n        description = description.substring(0, 200) + '...';\r\n    }\r\n\r\n    return (\r\n        <section className=\"featured\" style={{\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center',\r\n            backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\r\n        }}>\r\n            <div className=\"featured--vertical\">\r\n                <div className=\"featured--horizontal\">\r\n                    <div className=\"featured--name\"> {item.original_name} </div>\r\n                    <div className=\"featured--info\">\r\n                        <div className=\"featured--points\"> {item.vote_average} points </div>\r\n                        <div className=\"featured--year\"> {firstDate.getFullYear} </div>\r\n                        <div className=\"featured--seasons\"> {item.number_of_seasons} season{item.number_of_seasons !== 1 ? 's' : ''} </div>\r\n                    </div>\r\n                    <div className=\"featured--description\"> {description} </div>\r\n                    <div className=\"featured--buttons\">\r\n                        <a className=\"featured--watchbutton\" href={`/watch/${item.id}`} > ▶ Watch </a>\r\n                        <a className=\"featured--mylistbutton\" href={`/list/add/${item.id}`}> + My List </a>\r\n                    </div>\r\n                    <div className=\"featured--genres\"><strong> Genres:</strong> {genres.join(', ')} </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}","import React from 'react';\r\nimport './Header.css';\r\n\r\nexport default ({black}) => {\r\n    return (\r\n        <header className={black ? 'black' : ''}>\r\n            <div className=\"header--logo\">\r\n                <a href=\"/\">\r\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/0/0f/Logo_Netflix.png\" alt=\"Netflix\"></img>\r\n                </a>\r\n            </div>\r\n            <div className=\"header--user\">\r\n                <a href=\"/\">\r\n                    <img src=\"http://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\" alt=\"User\"></img>\r\n                </a>\r\n            </div>\r\n        </header>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Tmdb from './Tmdb';\nimport MovieRow from './components/MovieRow';\nimport FeaturedMovie from './components/FeaturedMovie';\nimport Header from './components/Header';\n\nfunction App() {\n\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n  const [blackHeader, setBlackHeader] = useState(false);\n\n  useEffect(()=>{\n    const loadAll = async () => {\n      // Pegando a lista TOTAL\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n\n      // Pegando o Featured\n      let originals = list.filter(i=>i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length -1 ));\n      let chosen = originals[0].items.results[randomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n      setFeaturedData(chosenInfo);\n    }\n\n    loadAll();\n  },[]);\n\n  useEffect(()=>{\n    const scrolllistener = () => {\n      if(window.scrollY > 30) {\n        setBlackHeader(true);\n      } else {\n        setBlackHeader(false);\n      }\n    }\n\n    window.addEventListener('scroll', scrolllistener);\n\n    return () => {\n      window.removeEventListener('scroll', scrolllistener);\n    }\n  },[])\n\n  return (\n    <div className=\"page\">\n\n      <Header black={blackHeader}></Header>\n\n    {featuredData && <FeaturedMovie item={featuredData}></FeaturedMovie> }\n\n      <section className=\"lists\">\n        {movieList.map((item, key)=>(\n          <MovieRow key={key} slug={item.slug} title={item.title} items={item.items}></MovieRow>\n        ))}\n      </section>\n\n      <footer>\n        Réplica feita por <strong>Douglas Cidral</strong>, para fins didáticos <br/>\n        Direitos de imagem para <span>Netflix</span> <br/>\n        Dados pegos do site Themoviedb.org\n      </footer>\n\n      {movieList.length <= 7 && \n      <div className=\"loading\">\n        <img src=\"https://www.filmelier.com/pt/br/news/wp-content/uploads/2020/03/netflix-loading.gif\" alt=\"loading\"></img>\n      </div>\n      }\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}